// Loop over all studies (we want timeseries nested in studies)
pos = 1;
for (k in 1:N_Study){
L = Length_Study[k];
segment(Grad_est, pos, Length_Study[k])[2:L] ~ normal( a_NC[NC[k]] + beta[NC[k]] * segment(Grad_est, pos, Length_Study[k])[1:(L - 1)], sigma[NC[k]]);
pos = pos + Length_Study[k];
}
}
"
AR1_random <- "
data{
int N;
int N_cat;
int N_Study;
int Length_Study[N_Study];
int NC[N_Study];
real Grad_obs[N];
int Study[N];
real Grad_sd[N];
}
parameters{
vector[N] Grad_est;         // Estimated gradients
real a_NC[N_cat];
real beta[N_cat];
real<lower=0> sigma[N_cat];
matrix[2,N_Study] z_Study;               //Matrix of uncorrelated z - values
vector<lower=0>[2] sigma_Study;       //SD of parameters among individuals
cholesky_factor_corr[2] Rho_Study;    // This is the Cholesky factor: if you multiply this matrix and it's transpose you get correlation matrix
}
transformed parameters{
matrix[N_Study,2] v_Study; // Matrix of varying effects for each subset
v_Study = ( diag_pre_multiply( sigma_Study , Rho_Study ) * z_Study )';
}
model{
int pos; // Counter for position
int L;   // Local var for length of subsets
a_NC ~ normal(0,1);
beta ~ normal(0,1);
sigma ~ exponential(1);
// Varying effects
to_vector(z_Study) ~ normal(0,1);
sigma_Study ~ exponential(1);
Rho_Study ~ lkj_corr_cholesky(4);
Grad_obs ~ normal( Grad_est , Grad_sd );
// Loop over all studies (we want timeseries nested in studies)
pos = 1;
for (k in 1:N_Study){
L = Length_Study[k];
segment(Grad_est, pos, Length_Study[k])[2:L] ~ normal( (a_NC[NC[k]] + v_Study[k,1]) + (beta[NC[k]] + v_Study[k,2]) * segment(Grad_est, pos, Length_Study[k])[1:(L - 1)], sigma[NC[k]]);
pos = pos + Length_Study[k];
}
}
"
#Run stan models
m <- stan( model_code= AR1 , data=dat , chains=1, iter = 3000, cores=1, control=list(adapt_delta=0.9, max_treedepth=15))
s <- extract.samples(m)
library(scales)
#color stuff
require(RColorBrewer)#load package
col.pal <- brewer.pal(8, "Dark2") #create a pallette which you loop over for corresponding values
####
###
# Temporal Dynamics Plot
###
###
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:50
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,3,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-0.5,0.5), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.9,0.9)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.5, cex = 1.1, outer = TRUE)
dev.off()
####
###
# Densities
###
####
graphics.off()
png("Ar1Dens.png", res = 900, height = 9, width = 16, units = "cm")
par(mfrow = c(1,2),
oma=c(0,1,0.1,0),
mar=c(3,3,2,0.5))
NC = 1
dens <- density(s$beta[,NC])
x1 <- min(which(dens$x >= quantile(s$beta[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$beta[,NC], 1)))
plot(dens, xlim = c(-1,1), ylim = c(0,30), type="n", ann = FALSE)
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 2
dens <- density(s$beta[,NC])
x1 <- min(which(dens$x >= quantile(s$beta[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$beta[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 3
dens <- density(s$beta[,NC])
x1 <- min(which(dens$x >= quantile(s$beta[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$beta[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
legend("topleft", c("Autonomous", "Mixed", "Constructed"), col = c(alpha(col.pal[1],alpha = 0.3),alpha(col.pal[2],alpha = 0.3),alpha(col.pal[3],alpha = 0.3)), lty =1, lwd = 5, bty = "n" )
mtext("Density", side = 2, line=3, cex = 1.1)
mtext("Temporal Stability", side = 3, line=0.5, cex = 1.1)
NC = 1
dens <- density(s$sigma[,NC])
x1 <- min(which(dens$x >= quantile(s$sigma[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$sigma[,NC], 1)))
plot(dens, xlim = c(0,0.2), ylim = c(0,100), type="n", ann = FALSE)
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 2
dens <- density(s$sigma[,NC])
x1 <- min(which(dens$x >= quantile(s$sigma[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$sigma[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 3
dens <- density(s$sigma[,NC])
x1 <- min(which(dens$x >= quantile(s$sigma[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$sigma[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
mtext("Residual variation", side = 3, line=0.5, cex = 1.1)
dev.off()
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:50
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,3,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.9,0.9)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.5, cex = 1.1, outer = TRUE)
dev.off()
####
###
# Densities
###
####
graphics.off()
png("Ar1Dens.png", res = 900, height = 9, width = 16, units = "cm")
par(mfrow = c(1,2),
oma=c(0,1,0.1,0),
mar=c(3,3,2,0.5))
NC = 1
dens <- density(s$beta[,NC])
x1 <- min(which(dens$x >= quantile(s$beta[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$beta[,NC], 1)))
plot(dens, xlim = c(-1,1), ylim = c(0,30), type="n", ann = FALSE)
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 2
dens <- density(s$beta[,NC])
x1 <- min(which(dens$x >= quantile(s$beta[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$beta[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 3
dens <- density(s$beta[,NC])
x1 <- min(which(dens$x >= quantile(s$beta[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$beta[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
legend("topleft", c("Autonomous", "Mixed", "Constructed"), col = c(alpha(col.pal[1],alpha = 0.3),alpha(col.pal[2],alpha = 0.3),alpha(col.pal[3],alpha = 0.3)), lty =1, lwd = 5, bty = "n" )
mtext("Density", side = 2, line=3, cex = 1.1)
mtext("Temporal Stability", side = 3, line=0.5, cex = 1.1)
NC = 1
dens <- density(s$sigma[,NC])
x1 <- min(which(dens$x >= quantile(s$sigma[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$sigma[,NC], 1)))
plot(dens, xlim = c(0,0.2), ylim = c(0,100), type="n", ann = FALSE)
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 2
dens <- density(s$sigma[,NC])
x1 <- min(which(dens$x >= quantile(s$sigma[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$sigma[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 3
dens <- density(s$sigma[,NC])
x1 <- min(which(dens$x >= quantile(s$sigma[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$sigma[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
mtext("Residual variation", side = 3, line=0.5, cex = 1.1)
dev.off()
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:50
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,3,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.9,0.9)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.5, cex = 1.1, outer = TRUE)
dev.off()
####
###
# Densities
###
####
graphics.off()
png("Ar1Dens.png", res = 900, height = 9, width = 16, units = "cm")
par(mfrow = c(1,2),
oma=c(0,1,0.1,0),
mar=c(3,3,2,0.5))
NC = 1
dens <- density(s$beta[,NC])
x1 <- min(which(dens$x >= quantile(s$beta[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$beta[,NC], 1)))
plot(dens, xlim = c(-1,1), ylim = c(0,30), type="n", ann = FALSE)
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 2
dens <- density(s$beta[,NC])
x1 <- min(which(dens$x >= quantile(s$beta[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$beta[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 3
dens <- density(s$beta[,NC])
x1 <- min(which(dens$x >= quantile(s$beta[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$beta[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
legend("topleft", c("Autonomous", "Mixed", "Constructed"), col = c(alpha(col.pal[1],alpha = 0.3),alpha(col.pal[2],alpha = 0.3),alpha(col.pal[3],alpha = 0.3)), lty =1, lwd = 5, bty = "n" )
mtext("Density", side = 2, line=3, cex = 1.1)
mtext("Temporal Stability", side = 3, line=0.5, cex = 1.1)
NC = 1
dens <- density(s$sigma[,NC])
x1 <- min(which(dens$x >= quantile(s$sigma[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$sigma[,NC], 1)))
plot(dens, xlim = c(0,0.2), ylim = c(0,100), type="n", ann = FALSE)
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 2
dens <- density(s$sigma[,NC])
x1 <- min(which(dens$x >= quantile(s$sigma[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$sigma[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
NC = 3
dens <- density(s$sigma[,NC])
x1 <- min(which(dens$x >= quantile(s$sigma[,NC], 0)))
x2 <- max(which(dens$x <  quantile(s$sigma[,NC], 1)))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=alpha(col.pal[NC],alpha = 0.3), border = NA), add=TRUE)
mtext("Residual variation", side = 3, line=0.5, cex = 1.1)
dev.off()
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:50
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,3,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.7,0.7)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.5, cex = 1.1, outer = TRUE)
dev.off()
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:50
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,3,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.7,0.7)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.5, cex = 1.1, outer = TRUE)
dev.off()
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:50
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,3,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.4,0.4)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.5, cex = 1.1, outer = TRUE)
dev.off()
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:50
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,3,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.4,0.4)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.5, cex = 1.1, outer = TRUE)
dev.off()
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:50
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,2.5,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.4,0.4)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.3, cex = 1.1, outer = TRUE)
dev.off()
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:50
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,2.5,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.4,0.4)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.3, cex = 1.1, outer = TRUE)
dev.off()
seq <- 2:100
par(mfrow = c(dat$N_cat,1),
oma=c(3,3,2,0),
mar=c(3,2.5,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.4,0.4)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.3, cex = 1.1, outer = TRUE)
seq <- 2:100
par(mfrow = c(dat$N_cat,1),
oma=c(3,2.5,2,0),
mar=c(3,2.5,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.4,0.4)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.3, cex = 1.1, outer = TRUE)
graphics.off()
png("Ar1Sim.png", res = 900, height = 18, width = 12, units = "cm")
seq <- 2:100
par(mfrow = c(dat$N_cat,1),
oma=c(3,2.5,2,0),
mar=c(3,2.5,2,0.2))
for (NC in 1:dat$N_cat) {
plot(c(1,seq), type = "n", ylim = c(-1,1), bty = "n")
for (i in sample(1:length(s$a_NC[,NC]), 100)) {
y <- c()
y[1] <- rnorm(1, mean(s$a_NC[,NC]), mean(s$sigma[,NC]))
for (t in seq) {
mu <- s$a_NC[i,NC] + s$beta[i,NC] * y[t-1]
sigma <- s$sigma[i, NC]
y[t] <- rnorm(1, mu, sigma )
}
lines(y, col = alpha("darkgrey", alpha = ifelse(NC==1, 0.4,0.4)))
}
if (NC == 1) mtext("Autonomous", side = 3, line=-1.5, cex = 1.3)
if (NC == 2) mtext("Mixed", side = 3, line=-1.5, cex = 1.3)
if (NC == 3) mtext("Constructed", side = 3, line=-1.5, cex = 1.3)
abline(h=0, lty = 2)
}
mtext("Time [years]", side = 1, line=1.5, cex = 1.1, outer = TRUE)
mtext("Selection Gradient", side = 2, line=1.2, cex = 1.1, outer = TRUE)
dev.off()
